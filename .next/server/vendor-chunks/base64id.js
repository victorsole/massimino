/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/base64id";
exports.ids = ["vendor-chunks/base64id"];
exports.modules = {

/***/ "(action-browser)/./node_modules/base64id/lib/base64id.js":
/*!***********************************************!*\
  !*** ./node_modules/base64id/lib/base64id.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*!\n * base64id v0.1.0\n */\n\n/**\n * Module dependencies\n */\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\n/**\n * Constructor\n */\n\nvar Base64Id = function() { };\n\n/**\n * Get random bytes\n *\n * Uses a buffer if available, falls back to crypto.randomBytes\n */\n\nBase64Id.prototype.getRandomBytes = function(bytes) {\n\n  var BUFFER_SIZE = 4096\n  var self = this;  \n  \n  bytes = bytes || 12;\n\n  if (bytes > BUFFER_SIZE) {\n    return crypto.randomBytes(bytes);\n  }\n  \n  var bytesInBuffer = parseInt(BUFFER_SIZE/bytes);\n  var threshold = parseInt(bytesInBuffer*0.85);\n\n  if (!threshold) {\n    return crypto.randomBytes(bytes);\n  }\n\n  if (this.bytesBufferIndex == null) {\n     this.bytesBufferIndex = -1;\n  }\n\n  if (this.bytesBufferIndex == bytesInBuffer) {\n    this.bytesBuffer = null;\n    this.bytesBufferIndex = -1;\n  }\n\n  // No buffered bytes available or index above threshold\n  if (this.bytesBufferIndex == -1 || this.bytesBufferIndex > threshold) {\n     \n    if (!this.isGeneratingBytes) {\n      this.isGeneratingBytes = true;\n      crypto.randomBytes(BUFFER_SIZE, function(err, bytes) {\n        self.bytesBuffer = bytes;\n        self.bytesBufferIndex = 0;\n        self.isGeneratingBytes = false;\n      }); \n    }\n    \n    // Fall back to sync call when no buffered bytes are available\n    if (this.bytesBufferIndex == -1) {\n      return crypto.randomBytes(bytes);\n    }\n  }\n  \n  var result = this.bytesBuffer.slice(bytes*this.bytesBufferIndex, bytes*(this.bytesBufferIndex+1)); \n  this.bytesBufferIndex++; \n  \n  return result;\n}\n\n/**\n * Generates a base64 id\n *\n * (Original version from socket.io <http://socket.io>)\n */\n\nBase64Id.prototype.generateId = function () {\n  var rand = Buffer.alloc(15); // multiple of 3 for base64\n  if (!rand.writeInt32BE) {\n    return Math.abs(Math.random() * Math.random() * Date.now() | 0).toString()\n      + Math.abs(Math.random() * Math.random() * Date.now() | 0).toString();\n  }\n  this.sequenceNumber = (this.sequenceNumber + 1) | 0;\n  rand.writeInt32BE(this.sequenceNumber, 11);\n  if (crypto.randomBytes) {\n    this.getRandomBytes(12).copy(rand);\n  } else {\n    // not secure for node 0.4\n    [0, 4, 8].forEach(function(i) {\n      rand.writeInt32BE(Math.random() * Math.pow(2, 32) | 0, i);\n    });\n  }\n  return rand.toString('base64').replace(/\\//g, '_').replace(/\\+/g, '-');\n};\n\n/**\n * Export\n */\n\nexports = module.exports = new Base64Id();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlNjRpZC9saWIvYmFzZTY0aWQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWN0b3Jzb2xlL0RvY3VtZW50cy9HaXRIdWIvbWFzc2ltaW5vL21hc3NpbWluby9ub2RlX21vZHVsZXMvYmFzZTY0aWQvbGliL2Jhc2U2NGlkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogYmFzZTY0aWQgdjAuMS4wXG4gKi9cblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzXG4gKi9cblxudmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG4vKipcbiAqIENvbnN0cnVjdG9yXG4gKi9cblxudmFyIEJhc2U2NElkID0gZnVuY3Rpb24oKSB7IH07XG5cbi8qKlxuICogR2V0IHJhbmRvbSBieXRlc1xuICpcbiAqIFVzZXMgYSBidWZmZXIgaWYgYXZhaWxhYmxlLCBmYWxscyBiYWNrIHRvIGNyeXB0by5yYW5kb21CeXRlc1xuICovXG5cbkJhc2U2NElkLnByb3RvdHlwZS5nZXRSYW5kb21CeXRlcyA9IGZ1bmN0aW9uKGJ5dGVzKSB7XG5cbiAgdmFyIEJVRkZFUl9TSVpFID0gNDA5NlxuICB2YXIgc2VsZiA9IHRoaXM7ICBcbiAgXG4gIGJ5dGVzID0gYnl0ZXMgfHwgMTI7XG5cbiAgaWYgKGJ5dGVzID4gQlVGRkVSX1NJWkUpIHtcbiAgICByZXR1cm4gY3J5cHRvLnJhbmRvbUJ5dGVzKGJ5dGVzKTtcbiAgfVxuICBcbiAgdmFyIGJ5dGVzSW5CdWZmZXIgPSBwYXJzZUludChCVUZGRVJfU0laRS9ieXRlcyk7XG4gIHZhciB0aHJlc2hvbGQgPSBwYXJzZUludChieXRlc0luQnVmZmVyKjAuODUpO1xuXG4gIGlmICghdGhyZXNob2xkKSB7XG4gICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhieXRlcyk7XG4gIH1cblxuICBpZiAodGhpcy5ieXRlc0J1ZmZlckluZGV4ID09IG51bGwpIHtcbiAgICAgdGhpcy5ieXRlc0J1ZmZlckluZGV4ID0gLTE7XG4gIH1cblxuICBpZiAodGhpcy5ieXRlc0J1ZmZlckluZGV4ID09IGJ5dGVzSW5CdWZmZXIpIHtcbiAgICB0aGlzLmJ5dGVzQnVmZmVyID0gbnVsbDtcbiAgICB0aGlzLmJ5dGVzQnVmZmVySW5kZXggPSAtMTtcbiAgfVxuXG4gIC8vIE5vIGJ1ZmZlcmVkIGJ5dGVzIGF2YWlsYWJsZSBvciBpbmRleCBhYm92ZSB0aHJlc2hvbGRcbiAgaWYgKHRoaXMuYnl0ZXNCdWZmZXJJbmRleCA9PSAtMSB8fCB0aGlzLmJ5dGVzQnVmZmVySW5kZXggPiB0aHJlc2hvbGQpIHtcbiAgICAgXG4gICAgaWYgKCF0aGlzLmlzR2VuZXJhdGluZ0J5dGVzKSB7XG4gICAgICB0aGlzLmlzR2VuZXJhdGluZ0J5dGVzID0gdHJ1ZTtcbiAgICAgIGNyeXB0by5yYW5kb21CeXRlcyhCVUZGRVJfU0laRSwgZnVuY3Rpb24oZXJyLCBieXRlcykge1xuICAgICAgICBzZWxmLmJ5dGVzQnVmZmVyID0gYnl0ZXM7XG4gICAgICAgIHNlbGYuYnl0ZXNCdWZmZXJJbmRleCA9IDA7XG4gICAgICAgIHNlbGYuaXNHZW5lcmF0aW5nQnl0ZXMgPSBmYWxzZTtcbiAgICAgIH0pOyBcbiAgICB9XG4gICAgXG4gICAgLy8gRmFsbCBiYWNrIHRvIHN5bmMgY2FsbCB3aGVuIG5vIGJ1ZmZlcmVkIGJ5dGVzIGFyZSBhdmFpbGFibGVcbiAgICBpZiAodGhpcy5ieXRlc0J1ZmZlckluZGV4ID09IC0xKSB7XG4gICAgICByZXR1cm4gY3J5cHRvLnJhbmRvbUJ5dGVzKGJ5dGVzKTtcbiAgICB9XG4gIH1cbiAgXG4gIHZhciByZXN1bHQgPSB0aGlzLmJ5dGVzQnVmZmVyLnNsaWNlKGJ5dGVzKnRoaXMuYnl0ZXNCdWZmZXJJbmRleCwgYnl0ZXMqKHRoaXMuYnl0ZXNCdWZmZXJJbmRleCsxKSk7IFxuICB0aGlzLmJ5dGVzQnVmZmVySW5kZXgrKzsgXG4gIFxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEdlbmVyYXRlcyBhIGJhc2U2NCBpZFxuICpcbiAqIChPcmlnaW5hbCB2ZXJzaW9uIGZyb20gc29ja2V0LmlvIDxodHRwOi8vc29ja2V0LmlvPilcbiAqL1xuXG5CYXNlNjRJZC5wcm90b3R5cGUuZ2VuZXJhdGVJZCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJhbmQgPSBCdWZmZXIuYWxsb2MoMTUpOyAvLyBtdWx0aXBsZSBvZiAzIGZvciBiYXNlNjRcbiAgaWYgKCFyYW5kLndyaXRlSW50MzJCRSkge1xuICAgIHJldHVybiBNYXRoLmFicyhNYXRoLnJhbmRvbSgpICogTWF0aC5yYW5kb20oKSAqIERhdGUubm93KCkgfCAwKS50b1N0cmluZygpXG4gICAgICArIE1hdGguYWJzKE1hdGgucmFuZG9tKCkgKiBNYXRoLnJhbmRvbSgpICogRGF0ZS5ub3coKSB8IDApLnRvU3RyaW5nKCk7XG4gIH1cbiAgdGhpcy5zZXF1ZW5jZU51bWJlciA9ICh0aGlzLnNlcXVlbmNlTnVtYmVyICsgMSkgfCAwO1xuICByYW5kLndyaXRlSW50MzJCRSh0aGlzLnNlcXVlbmNlTnVtYmVyLCAxMSk7XG4gIGlmIChjcnlwdG8ucmFuZG9tQnl0ZXMpIHtcbiAgICB0aGlzLmdldFJhbmRvbUJ5dGVzKDEyKS5jb3B5KHJhbmQpO1xuICB9IGVsc2Uge1xuICAgIC8vIG5vdCBzZWN1cmUgZm9yIG5vZGUgMC40XG4gICAgWzAsIDQsIDhdLmZvckVhY2goZnVuY3Rpb24oaSkge1xuICAgICAgcmFuZC53cml0ZUludDMyQkUoTWF0aC5yYW5kb20oKSAqIE1hdGgucG93KDIsIDMyKSB8IDAsIGkpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiByYW5kLnRvU3RyaW5nKCdiYXNlNjQnKS5yZXBsYWNlKC9cXC8vZywgJ18nKS5yZXBsYWNlKC9cXCsvZywgJy0nKTtcbn07XG5cbi8qKlxuICogRXhwb3J0XG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gbmV3IEJhc2U2NElkKCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/base64id/lib/base64id.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/base64id/lib/base64id.js":
/*!***********************************************!*\
  !*** ./node_modules/base64id/lib/base64id.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*!\n * base64id v0.1.0\n */\n\n/**\n * Module dependencies\n */\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\n/**\n * Constructor\n */\n\nvar Base64Id = function() { };\n\n/**\n * Get random bytes\n *\n * Uses a buffer if available, falls back to crypto.randomBytes\n */\n\nBase64Id.prototype.getRandomBytes = function(bytes) {\n\n  var BUFFER_SIZE = 4096\n  var self = this;  \n  \n  bytes = bytes || 12;\n\n  if (bytes > BUFFER_SIZE) {\n    return crypto.randomBytes(bytes);\n  }\n  \n  var bytesInBuffer = parseInt(BUFFER_SIZE/bytes);\n  var threshold = parseInt(bytesInBuffer*0.85);\n\n  if (!threshold) {\n    return crypto.randomBytes(bytes);\n  }\n\n  if (this.bytesBufferIndex == null) {\n     this.bytesBufferIndex = -1;\n  }\n\n  if (this.bytesBufferIndex == bytesInBuffer) {\n    this.bytesBuffer = null;\n    this.bytesBufferIndex = -1;\n  }\n\n  // No buffered bytes available or index above threshold\n  if (this.bytesBufferIndex == -1 || this.bytesBufferIndex > threshold) {\n     \n    if (!this.isGeneratingBytes) {\n      this.isGeneratingBytes = true;\n      crypto.randomBytes(BUFFER_SIZE, function(err, bytes) {\n        self.bytesBuffer = bytes;\n        self.bytesBufferIndex = 0;\n        self.isGeneratingBytes = false;\n      }); \n    }\n    \n    // Fall back to sync call when no buffered bytes are available\n    if (this.bytesBufferIndex == -1) {\n      return crypto.randomBytes(bytes);\n    }\n  }\n  \n  var result = this.bytesBuffer.slice(bytes*this.bytesBufferIndex, bytes*(this.bytesBufferIndex+1)); \n  this.bytesBufferIndex++; \n  \n  return result;\n}\n\n/**\n * Generates a base64 id\n *\n * (Original version from socket.io <http://socket.io>)\n */\n\nBase64Id.prototype.generateId = function () {\n  var rand = Buffer.alloc(15); // multiple of 3 for base64\n  if (!rand.writeInt32BE) {\n    return Math.abs(Math.random() * Math.random() * Date.now() | 0).toString()\n      + Math.abs(Math.random() * Math.random() * Date.now() | 0).toString();\n  }\n  this.sequenceNumber = (this.sequenceNumber + 1) | 0;\n  rand.writeInt32BE(this.sequenceNumber, 11);\n  if (crypto.randomBytes) {\n    this.getRandomBytes(12).copy(rand);\n  } else {\n    // not secure for node 0.4\n    [0, 4, 8].forEach(function(i) {\n      rand.writeInt32BE(Math.random() * Math.pow(2, 32) | 0, i);\n    });\n  }\n  return rand.toString('base64').replace(/\\//g, '_').replace(/\\+/g, '-');\n};\n\n/**\n * Export\n */\n\nexports = module.exports = new Base64Id();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYmFzZTY0aWQvbGliL2Jhc2U2NGlkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLHNCQUFROztBQUU3QjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvdmljdG9yc29sZS9Eb2N1bWVudHMvR2l0SHViL21hc3NpbWluby9tYXNzaW1pbm8vbm9kZV9tb2R1bGVzL2Jhc2U2NGlkL2xpYi9iYXNlNjRpZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGJhc2U2NGlkIHYwLjEuMFxuICovXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llc1xuICovXG5cbnZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcblxuLyoqXG4gKiBDb25zdHJ1Y3RvclxuICovXG5cbnZhciBCYXNlNjRJZCA9IGZ1bmN0aW9uKCkgeyB9O1xuXG4vKipcbiAqIEdldCByYW5kb20gYnl0ZXNcbiAqXG4gKiBVc2VzIGEgYnVmZmVyIGlmIGF2YWlsYWJsZSwgZmFsbHMgYmFjayB0byBjcnlwdG8ucmFuZG9tQnl0ZXNcbiAqL1xuXG5CYXNlNjRJZC5wcm90b3R5cGUuZ2V0UmFuZG9tQnl0ZXMgPSBmdW5jdGlvbihieXRlcykge1xuXG4gIHZhciBCVUZGRVJfU0laRSA9IDQwOTZcbiAgdmFyIHNlbGYgPSB0aGlzOyAgXG4gIFxuICBieXRlcyA9IGJ5dGVzIHx8IDEyO1xuXG4gIGlmIChieXRlcyA+IEJVRkZFUl9TSVpFKSB7XG4gICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhieXRlcyk7XG4gIH1cbiAgXG4gIHZhciBieXRlc0luQnVmZmVyID0gcGFyc2VJbnQoQlVGRkVSX1NJWkUvYnl0ZXMpO1xuICB2YXIgdGhyZXNob2xkID0gcGFyc2VJbnQoYnl0ZXNJbkJ1ZmZlciowLjg1KTtcblxuICBpZiAoIXRocmVzaG9sZCkge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoYnl0ZXMpO1xuICB9XG5cbiAgaWYgKHRoaXMuYnl0ZXNCdWZmZXJJbmRleCA9PSBudWxsKSB7XG4gICAgIHRoaXMuYnl0ZXNCdWZmZXJJbmRleCA9IC0xO1xuICB9XG5cbiAgaWYgKHRoaXMuYnl0ZXNCdWZmZXJJbmRleCA9PSBieXRlc0luQnVmZmVyKSB7XG4gICAgdGhpcy5ieXRlc0J1ZmZlciA9IG51bGw7XG4gICAgdGhpcy5ieXRlc0J1ZmZlckluZGV4ID0gLTE7XG4gIH1cblxuICAvLyBObyBidWZmZXJlZCBieXRlcyBhdmFpbGFibGUgb3IgaW5kZXggYWJvdmUgdGhyZXNob2xkXG4gIGlmICh0aGlzLmJ5dGVzQnVmZmVySW5kZXggPT0gLTEgfHwgdGhpcy5ieXRlc0J1ZmZlckluZGV4ID4gdGhyZXNob2xkKSB7XG4gICAgIFxuICAgIGlmICghdGhpcy5pc0dlbmVyYXRpbmdCeXRlcykge1xuICAgICAgdGhpcy5pc0dlbmVyYXRpbmdCeXRlcyA9IHRydWU7XG4gICAgICBjcnlwdG8ucmFuZG9tQnl0ZXMoQlVGRkVSX1NJWkUsIGZ1bmN0aW9uKGVyciwgYnl0ZXMpIHtcbiAgICAgICAgc2VsZi5ieXRlc0J1ZmZlciA9IGJ5dGVzO1xuICAgICAgICBzZWxmLmJ5dGVzQnVmZmVySW5kZXggPSAwO1xuICAgICAgICBzZWxmLmlzR2VuZXJhdGluZ0J5dGVzID0gZmFsc2U7XG4gICAgICB9KTsgXG4gICAgfVxuICAgIFxuICAgIC8vIEZhbGwgYmFjayB0byBzeW5jIGNhbGwgd2hlbiBubyBidWZmZXJlZCBieXRlcyBhcmUgYXZhaWxhYmxlXG4gICAgaWYgKHRoaXMuYnl0ZXNCdWZmZXJJbmRleCA9PSAtMSkge1xuICAgICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhieXRlcyk7XG4gICAgfVxuICB9XG4gIFxuICB2YXIgcmVzdWx0ID0gdGhpcy5ieXRlc0J1ZmZlci5zbGljZShieXRlcyp0aGlzLmJ5dGVzQnVmZmVySW5kZXgsIGJ5dGVzKih0aGlzLmJ5dGVzQnVmZmVySW5kZXgrMSkpOyBcbiAgdGhpcy5ieXRlc0J1ZmZlckluZGV4Kys7IFxuICBcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBiYXNlNjQgaWRcbiAqXG4gKiAoT3JpZ2luYWwgdmVyc2lvbiBmcm9tIHNvY2tldC5pbyA8aHR0cDovL3NvY2tldC5pbz4pXG4gKi9cblxuQmFzZTY0SWQucHJvdG90eXBlLmdlbmVyYXRlSWQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciByYW5kID0gQnVmZmVyLmFsbG9jKDE1KTsgLy8gbXVsdGlwbGUgb2YgMyBmb3IgYmFzZTY0XG4gIGlmICghcmFuZC53cml0ZUludDMyQkUpIHtcbiAgICByZXR1cm4gTWF0aC5hYnMoTWF0aC5yYW5kb20oKSAqIE1hdGgucmFuZG9tKCkgKiBEYXRlLm5vdygpIHwgMCkudG9TdHJpbmcoKVxuICAgICAgKyBNYXRoLmFicyhNYXRoLnJhbmRvbSgpICogTWF0aC5yYW5kb20oKSAqIERhdGUubm93KCkgfCAwKS50b1N0cmluZygpO1xuICB9XG4gIHRoaXMuc2VxdWVuY2VOdW1iZXIgPSAodGhpcy5zZXF1ZW5jZU51bWJlciArIDEpIHwgMDtcbiAgcmFuZC53cml0ZUludDMyQkUodGhpcy5zZXF1ZW5jZU51bWJlciwgMTEpO1xuICBpZiAoY3J5cHRvLnJhbmRvbUJ5dGVzKSB7XG4gICAgdGhpcy5nZXRSYW5kb21CeXRlcygxMikuY29weShyYW5kKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBub3Qgc2VjdXJlIGZvciBub2RlIDAuNFxuICAgIFswLCA0LCA4XS5mb3JFYWNoKGZ1bmN0aW9uKGkpIHtcbiAgICAgIHJhbmQud3JpdGVJbnQzMkJFKE1hdGgucmFuZG9tKCkgKiBNYXRoLnBvdygyLCAzMikgfCAwLCBpKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gcmFuZC50b1N0cmluZygnYmFzZTY0JykucmVwbGFjZSgvXFwvL2csICdfJykucmVwbGFjZSgvXFwrL2csICctJyk7XG59O1xuXG4vKipcbiAqIEV4cG9ydFxuICovXG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IG5ldyBCYXNlNjRJZCgpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/base64id/lib/base64id.js\n");

/***/ })

};
;